{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP USER\\\\Documents\\\\Github\\\\movie-suggestor\\\\client\\\\navigation.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport RecentlyWatched from \"./recentlyWatched\";\nimport GenerateScreen from \"./generateScreen\";\nimport ActivityScreen from \"./activityScreen\";\nimport SettingsScreen from \"./settingScreen\";\nvar Tab = createBottomTabNavigator();\nexport default function Navigation(_ref) {\n  var route = _ref.route;\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref2) {\n      var route = _ref2.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused,\n              color = _ref3.color,\n              size = _ref3.size;\n          var iconName;\n\n          if (route.name === 'Activity') {\n            iconName = focused ? 'view-carousel' : 'view-carousel';\n          } else if (route.name === 'Generate') {\n            iconName = focused ? 'ondemand-video' : 'ondemand-video';\n          } else if (route.name === 'Recent') {\n            iconName = focused ? 'turned-in-not' : 'turned-in-not';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'person-outline' : 'person-outline';\n          }\n\n          return React.createElement(MaterialIcons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 32\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: '#DD1515',\n      inactiveTintColor: 'white',\n      style: {\n        backgroundColor: 'black'\n      },\n      animationEnabled: true,\n      keyboardHidesTabBar: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Activity\",\n    component: ActivityScreen,\n    initialParams: route.params,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Generate\",\n    component: GenerateScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Recent\",\n    component: RecentlyWatched,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/HP USER/Documents/Github/movie-suggestor/client/navigation.js"],"names":["React","useState","MaterialIcons","createBottomTabNavigator","NavigationContainer","LinearGradient","RecentlyWatched","GenerateScreen","ActivityScreen","SettingsScreen","Tab","Navigation","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","style","backgroundColor","animationEnabled","keyboardHidesTabBar","params","styles","StyleSheet","create","background","flex"],"mappings":";AAEA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;AAEA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAEA,OAAOC,eAAP;AACA,OAAOC,cAAP;AACA,OAAOC,cAAP;AACA,OAAOC,cAAP;AAEA,IAAMC,GAAG,GAAGP,wBAAwB,EAApC;AAEA,eAAe,SAASQ,UAAT,OAA6B;AAAA,MAARC,KAAQ,QAARA,KAAQ;AACxC,SACQ,oBAAC,GAAD,CAAK,SAAL;AACI,IAAA,aAAa,EAAE;AAAA,UAAGA,KAAH,SAAGA,KAAH;AAAA,aAAgB;AAC3BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACtC,cAAIC,QAAJ;;AAEA,cAAIL,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;AAC3BD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,eAAH,GAAqB,eAAvC;AACH,WAFD,MAEO,IAAIF,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;AAClCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,gBAAH,GAAsB,gBAAxC;AACH,WAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,QAAnB,EAA6B;AAChCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,eAAH,GAAqB,eAAvC;AACH,WAFM,MAEA,IAAIF,KAAK,CAACM,IAAN,KAAe,UAAnB,EAA+B;AAClCD,YAAAA,QAAQ,GAAGH,OAAO,GAAG,gBAAH,GAAsB,gBAAxC;AACH;;AAED,iBAAO,oBAAC,aAAD;AAAe,YAAA,IAAI,EAAEG,QAArB;AAA+B,YAAA,IAAI,EAAED,IAArC;AAA2C,YAAA,KAAK,EAAED,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AAf0B,OAAhB;AAAA,KADnB;AAkBI,IAAA,aAAa,EAAE;AACXI,MAAAA,eAAe,EAAE,SADN;AAEXC,MAAAA,iBAAiB,EAAE,OAFR;AAGXC,MAAAA,KAAK,EAAE;AACHC,QAAAA,eAAe,EAAE;AADd,OAHI;AAMXC,MAAAA,gBAAgB,EAAE,IANP;AAOXC,MAAAA,mBAAmB,EAAE;AAPV,KAlBnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA4BI,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,SAAS,EAAEhB,cAAvC;AAAuD,IAAA,aAAa,EAAEI,KAAK,CAACa,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,EA6BI,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,SAAS,EAAElB,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,EA8BI,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAED,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,EA+BI,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,UAAjB;AAA4B,IAAA,SAAS,EAAEG,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BJ,CADR;AAoCH;AAGD,IAAMiB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE;AADiB,CAAlB,CAAf","sourcesContent":["// You can import Ionicons from @expo/vector-icons if you use Expo or\r\n// react-native-vector-icons/Ionicons otherwise.\r\nimport React, {useState} from 'react';\r\nimport { Text, View, StyleSheet, Button, KeyboardAvoidingView } from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nimport RecentlyWatched from './recentlyWatched'\r\nimport GenerateScreen from './generateScreen'\r\nimport ActivityScreen from './activityScreen'\r\nimport SettingsScreen from './settingScreen'\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function Navigation({route}) {\r\n    return (\r\n            <Tab.Navigator\r\n                screenOptions={({ route }) => ({\r\n                    tabBarIcon: ({ focused, color, size }) => {\r\n                        let iconName;\r\n\r\n                        if (route.name === 'Activity') {\r\n                            iconName = focused ? 'view-carousel' : 'view-carousel';\r\n                        } else if (route.name === 'Generate') {\r\n                            iconName = focused ? 'ondemand-video' : 'ondemand-video';\r\n                        } else if (route.name === 'Recent') {\r\n                            iconName = focused ? 'turned-in-not' : 'turned-in-not'\r\n                        } else if (route.name === 'Settings') {\r\n                            iconName = focused ? 'person-outline' : 'person-outline';\r\n                        }\r\n                        // You can return any component that you like here!\r\n                        return <MaterialIcons name={iconName} size={size} color={color} />;\r\n                    },\r\n                })}\r\n                tabBarOptions={{\r\n                    activeTintColor: '#DD1515',\r\n                    inactiveTintColor: 'white',\r\n                    style: {\r\n                        backgroundColor: 'black'\r\n                    },\r\n                    animationEnabled: true,\r\n                    keyboardHidesTabBar: true\r\n                }}\r\n            >\r\n                <Tab.Screen name=\"Activity\" component={ActivityScreen} initialParams={route.params}/>\r\n                <Tab.Screen name=\"Generate\" component={GenerateScreen} />\r\n                <Tab.Screen name=\"Recent\" component={RecentlyWatched} />\r\n                <Tab.Screen name=\"Settings\" component={SettingsScreen} />\r\n\r\n            </Tab.Navigator>\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    background: {\r\n        flex: 1\r\n    },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}