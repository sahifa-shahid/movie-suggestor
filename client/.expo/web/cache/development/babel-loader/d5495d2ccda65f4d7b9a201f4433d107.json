{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP USER\\\\Documents\\\\Github\\\\movie-suggestor\\\\client\\\\activityScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { WebView } from 'react-native-webview';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { BlurView } from 'expo-blur';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\nimport AlertMeModal from \"./alertMeModal\";\nimport spiderman from \"./assets/spiderman.png\";\nimport trailer from \"./assets/trailer.png\";\nimport MovieModal from \"./movieModal\";\nimport { Video } from 'expo-av';\nexport default function ActivityScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      datafromapi = _useState2[0],\n      changeData = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentItem = _useState4[0],\n      setCurrentItem = _useState4[1];\n\n  useEffect(function () {\n    function getMoviesFromApi() {\n      var response, responseJson, trendingList;\n      return _regeneratorRuntime.async(function getMoviesFromApi$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('https://api.themoviedb.org/3/discover/movie?api_key=bd7527de69fe3480678236d07c155147&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&release_date.gte=2019-11-01&release_date.lte=2020-04-28'));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 6:\n              responseJson = _context.sent;\n              trendingList = responseJson.results.slice(0, 5);\n              changeData(trendingList);\n              setCurrentItem(trendingList[0]);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 12]], Promise);\n    }\n\n    getMoviesFromApi();\n  }, []);\n\n  function _renderItem(_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    var ITEM_HEIGHT = Math.round(Dimensions.get('window').height * 0.78);\n    return React.createElement(View, {\n      style: {\n        borderRadius: 5,\n        height: ITEM_HEIGHT,\n        marginLeft: 10,\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, React.createElement(ImageBackground, {\n      source: {\n        uri: \"https://image.tmdb.org/t/p/w500/\" + item.poster_path\n      },\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, React.createElement(BlurView, {\n      tint: \"dark\",\n      intensity: Platform.OS === 'ios' ? 70 : 160,\n      style: styles.notBlurred,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.rank,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, index + 1), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, React.createElement(MaterialIcons, {\n      name: \"more-vert\",\n      color: \"white\",\n      size: 41,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }))), React.createElement(View, {\n      style: {\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, React.createElement(AdjustLabel, {\n      fontSize: 40,\n      text: item.title,\n      style: styles.titleText,\n      numberOfLines: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n  var AdjustLabel = function AdjustLabel(_ref3) {\n    var fontSize = _ref3.fontSize,\n        text = _ref3.text,\n        style = _ref3.style,\n        numberOfLines = _ref3.numberOfLines;\n\n    var _useState5 = useState(fontSize),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentFont = _useState6[0],\n        setCurrentFont = _useState6[1];\n\n    return React.createElement(Text, {\n      numberOfLines: numberOfLines,\n      adjustsFontSizeToFit: true,\n      style: [style, {\n        fontSize: currentFont\n      }],\n      onTextLayout: function onTextLayout(e) {\n        var lines = e.nativeEvent.lines;\n\n        if (lines.length > numberOfLines) {\n          setCurrentFont(currentFont - 1);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, text);\n  };\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      activeIndex = _useState8[0],\n      setActiveIndex = _useState8[1];\n\n  var carousel = useRef(null);\n  var SLIDER_WIDTH = Dimensions.get('window').width;\n  var ITEM_WIDTH = Math.round(SLIDER_WIDTH * 0.95);\n\n  var _useState9 = useState(!route.params.recentlyActivated),\n      _useState10 = _slicedToArray(_useState9, 2),\n      alertVisible = _useState10[0],\n      setAlertVisible = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modalVisible = _useState12[0],\n      setModalVisible = _useState12[1];\n\n  return React.createElement(LinearGradient, {\n    colors: [\"rgba(0,0,0,0.98)\", \"#4e4e4e\", \"rgba(0,0,0,0.98)\"],\n    style: styles.background,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, React.createElement(AlertMeModal, {\n    alertVisible: alertVisible,\n    setAlertVisible: setAlertVisible,\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), datafromapi === undefined || currentItem === undefined ? React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 71\n    }\n  }, \"Loading\") : React.createElement(SafeAreaView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, React.createElement(MovieModal, {\n    modalVisible: modalVisible,\n    setModalVisible: setModalVisible,\n    item: currentItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, React.createElement(Carousel, {\n    layout: \"default\",\n    ref: carousel,\n    data: datafromapi,\n    sliderWidth: SLIDER_WIDTH,\n    itemWidth: ITEM_WIDTH,\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item,\n          index = _ref4.index;\n      return _renderItem({\n        item: item,\n        index: index,\n        setModalVisible: setModalVisible\n      });\n    },\n    onSnapToItem: function onSnapToItem(index) {\n      setActiveIndex(index);\n      setCurrentItem(datafromapi[index]);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  })), React.createElement(Pagination, {\n    dotsLength: 5,\n    activeDotIndex: activeIndex,\n    containerStyle: styles.paginationContainer,\n    dotColor: '#DD1515',\n    dotStyle: styles.paginationDot,\n    inactiveDotColor: 'white',\n    inactiveDotOpacity: 1,\n    inactiveDotScale: 0.6,\n    carouselRef: carousel,\n    tappableDots: !!carousel,\n    animatedDuration: 50,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  paginationContainer: {\n    paddingVertical: 10,\n    marginTop: 20\n  },\n  paginationDot: {\n    width: 12,\n    height: 12,\n    borderRadius: 6,\n    marginHorizontal: 4\n  },\n  notBlurred: _objectSpread({}, StyleSheet.absoluteFill, {\n    paddingHorizontal: 14,\n    paddingVertical: 20\n  }),\n  titleText: {\n    fontFamily: 'Raleway-Bold',\n    color: 'white',\n    textTransform: 'uppercase'\n  },\n  rank: {\n    fontFamily: 'ReemKufi-Regular',\n    color: 'white',\n    fontSize: 130,\n    paddingVertical: 0,\n    height: 137,\n    marginTop: -35\n  }\n});","map":{"version":3,"sources":["C:/Users/HP USER/Documents/Github/movie-suggestor/client/activityScreen.js"],"names":["React","useState","useRef","useEffect","WebView","LinearGradient","BlurView","MaterialIcons","Carousel","Pagination","AlertMeModal","spiderman","trailer","MovieModal","Video","ActivityScreen","navigation","route","datafromapi","changeData","currentItem","setCurrentItem","getMoviesFromApi","fetch","response","json","responseJson","trendingList","results","slice","console","error","renderItem","item","index","ITEM_HEIGHT","Math","round","Dimensions","get","height","borderRadius","marginLeft","marginRight","uri","poster_path","width","Platform","OS","styles","notBlurred","flexDirection","justifyContent","rank","setModalVisible","alignItems","title","titleText","AdjustLabel","fontSize","text","style","numberOfLines","currentFont","setCurrentFont","e","lines","nativeEvent","length","activeIndex","setActiveIndex","carousel","SLIDER_WIDTH","ITEM_WIDTH","params","recentlyActivated","alertVisible","setAlertVisible","modalVisible","background","undefined","paginationContainer","paginationDot","StyleSheet","create","flex","paddingVertical","marginTop","marginHorizontal","absoluteFill","paddingHorizontal","fontFamily","color","textTransform"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Text, View, Dimensions, SafeAreaView, StyleSheet, ImageBackground, Image, TouchableOpacity, Platform } from 'react-native';\r\nimport { WebView } from 'react-native-webview';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { BlurView } from 'expo-blur';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport Carousel, { Pagination } from 'react-native-snap-carousel';\r\nimport AlertMeModal from './alertMeModal';\r\n\r\nimport spiderman from './assets/spiderman.png'\r\nimport trailer from './assets/trailer.png'\r\nimport MovieModal from './movieModal'\r\n\r\nimport {Video} from 'expo-av';\r\n\r\n\r\nexport default function ActivityScreen({ navigation, route }) {\r\n    const [datafromapi, changeData] = useState()\r\n    const [currentItem, setCurrentItem] = useState()\r\n\r\n    useEffect(() => {\r\n        async function getMoviesFromApi() {\r\n            try {\r\n                let response = await fetch('https://api.themoviedb.org/3/discover/movie?api_key=bd7527de69fe3480678236d07c155147&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&release_date.gte=2019-11-01&release_date.lte=2020-04-28');\r\n                let responseJson = await response.json();\r\n                let trendingList = responseJson.results.slice(0, 5)\r\n                changeData(trendingList)\r\n                setCurrentItem(trendingList[0])\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        getMoviesFromApi()\r\n    }, [])\r\n\r\n    function renderItem({ item, index }) {\r\n        const ITEM_HEIGHT = Math.round(Dimensions.get('window').height * 0.78);\r\n        return (\r\n            <View style={{\r\n                borderRadius: 5,\r\n                height: ITEM_HEIGHT,\r\n                // padding: 50,\r\n                marginLeft: 10,\r\n                marginRight: 10\r\n            }}>\r\n                <ImageBackground source={{ uri: `https://image.tmdb.org/t/p/w500/${item.poster_path}` }} style={{ width: '100%', height: '100%' }}>\r\n                    <BlurView tint=\"dark\" intensity={Platform.OS === 'ios' ? 70 : 160} style={styles.notBlurred}>\r\n                        <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                            <Text style={styles.rank} >{index + 1}</Text>\r\n                            <TouchableOpacity onPress={() => setModalVisible(true)}>\r\n                                <MaterialIcons name='more-vert' color='white' size={41} />\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                        <View style={{ alignItems: 'center', justifyContent: 'center' }}>\r\n                            {/* <Image source={trailer} style={{ marginVertical: 30 }} /> */}\r\n                            {/* <Video\r\n                                source={{ uri: 'http://d23dyxeqlo5psv.cloudfront.net/big_buck_bunny.mp4' }}\r\n                                rate={1.0}\r\n                                volume={1.0}\r\n                                isMuted={false}\r\n                                resizeMode=\"cover\" \r\n                                shouldPlay\r\n                                isLooping\r\n                                style={{ width: 300, height: 300 }}\r\n                            /> */}\r\n\r\n                            <AdjustLabel fontSize={40} text={item.title} style={styles.titleText} numberOfLines={3} />\r\n                        </View>\r\n                    </BlurView>\r\n                </ImageBackground>\r\n            </View >\r\n        )\r\n    }\r\n\r\n\r\n\r\n    const AdjustLabel = ({ fontSize, text, style, numberOfLines }) => {\r\n        const [currentFont, setCurrentFont] = useState(fontSize);\r\n\r\n        return (\r\n            <Text\r\n                numberOfLines={numberOfLines}\r\n                adjustsFontSizeToFit\r\n                style={[style, { fontSize: currentFont }]}\r\n                onTextLayout={(e) => {\r\n                    const { lines } = e.nativeEvent;\r\n                    if (lines.length > numberOfLines) {\r\n                        setCurrentFont(currentFont - 1);\r\n                    }\r\n                }}>\r\n                {text}\r\n            </Text>\r\n        );\r\n    };\r\n\r\n    const [activeIndex, setActiveIndex] = useState(0)\r\n    const carousel = useRef(null);\r\n    const SLIDER_WIDTH = Dimensions.get('window').width;\r\n    const ITEM_WIDTH = Math.round(SLIDER_WIDTH * 0.95);\r\n    const [alertVisible, setAlertVisible] = useState(!route.params.recentlyActivated)\r\n    const [modalVisible, setModalVisible] = useState(false)\r\n\r\n    return (\r\n        <LinearGradient colors={[\"rgba(0,0,0,0.98)\", \"#4e4e4e\", \"rgba(0,0,0,0.98)\"]} style={styles.background}>\r\n            <AlertMeModal alertVisible={alertVisible} setAlertVisible={setAlertVisible} navigation={navigation} />\r\n            {datafromapi === undefined || currentItem === undefined ? <Text>Loading</Text> :\r\n                <SafeAreaView>\r\n                    <MovieModal modalVisible={modalVisible} setModalVisible={setModalVisible} item={currentItem} />\r\n                    {/* {console.log(datafromapi)} */}\r\n                    <View style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Carousel\r\n                            layout={\"default\"}\r\n                            ref={carousel}\r\n                            data={datafromapi}\r\n                            sliderWidth={SLIDER_WIDTH}\r\n                            itemWidth={ITEM_WIDTH}\r\n                            renderItem={({ item, index }) => renderItem({ item, index, setModalVisible })}\r\n                            onSnapToItem={index => { setActiveIndex(index); setCurrentItem(datafromapi[index]) }} />\r\n                    </View>\r\n                    <Pagination\r\n                        dotsLength={5}\r\n                        activeDotIndex={activeIndex}\r\n                        containerStyle={styles.paginationContainer}\r\n                        dotColor={'#DD1515'}\r\n                        dotStyle={styles.paginationDot}\r\n                        inactiveDotColor={'white'}\r\n                        inactiveDotOpacity={1}\r\n                        inactiveDotScale={0.6}\r\n                        carouselRef={carousel}\r\n                        tappableDots={!!carousel}\r\n                        animatedDuration={50} />\r\n                </SafeAreaView>\r\n            }\r\n        </LinearGradient>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    background: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    paginationContainer: {\r\n        paddingVertical: 10,\r\n        marginTop: 20\r\n    },\r\n    paginationDot: {\r\n        width: 12,\r\n        height: 12,\r\n        borderRadius: 6,\r\n        marginHorizontal: 4\r\n    },\r\n    notBlurred: {\r\n        ...StyleSheet.absoluteFill,\r\n        paddingHorizontal: 14,\r\n        paddingVertical: 20\r\n    },\r\n    titleText: {\r\n        fontFamily: 'Raleway-Bold',\r\n        color: 'white',\r\n        textTransform: 'uppercase'\r\n    },\r\n    rank: {\r\n        fontFamily: 'ReemKufi-Regular',\r\n        color: 'white',\r\n        fontSize: 130,\r\n        paddingVertical: 0,\r\n        height: 137,\r\n        marginTop: -35\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}