{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP USER\\\\Documents\\\\Github\\\\movie-suggestor\\\\client\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useFonts } from '@use-expo/font';\nimport { AppLoading } from 'expo';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport LandingPage from \"./landingPage\";\nimport FavMovies from \"./favMovies\";\nimport Navigation from \"./navigation\";\nimport SearchFavMovies from \"./searchFavMovies\";\nimport Testing from \"./test\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { auth, db } from \"./firebaseHandler\";\nauth.onAuthStateChanged(function (user) {\n  if (user != null) {\n    console.log(\"Logged In\");\n  } else {\n    console.log(\"Logged Out\");\n  }\n});\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      loggedIn = _useState2[0],\n      setLoggedIn = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      accountActivated = _useState4[0],\n      setAccountActivated = _useState4[1];\n\n  function initialUserCheck(user) {\n    db.collection(\"users\").doc(user.uid).get().then(function (doc) {\n      if (doc.data().movies.length !== 0) {\n        setAccountActivated(true);\n      } else {\n        setAccountActivated(false);\n      }\n\n      setLoggedIn(true);\n    }).catch(function (error) {\n      console.log(\"Error getting document:\", error);\n    });\n  }\n\n  function loggedOut() {\n    setAccountActivated(false);\n    setLoggedIn(false);\n  }\n\n  useEffect(function () {\n    auth.onAuthStateChanged(function (user) {\n      return user ? initialUserCheck(user) : loggedOut();\n    });\n  }, []);\n\n  var _useFonts = useFonts({\n    'ReemKufi-Regular': require(\"./assets/fonts/ReemKufi-Regular.ttf\"),\n    'Raleway-Regular': require(\"./assets/fonts/Raleway-Regular.ttf\"),\n    'Raleway-SemiBold': require(\"./assets/fonts/Raleway-SemiBold.ttf\"),\n    'Raleway-Medium': require(\"./assets/fonts/Raleway-Medium.ttf\"),\n    'Raleway-Bold': require(\"./assets/fonts/Raleway-Bold.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded || loggedIn === undefined || accountActivated === undefined) {\n    return React.createElement(AppLoading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return React.createElement(NavigationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }\n    }, React.createElement(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: loggedIn && accountActivated ? \"Navigation\" : loggedIn && accountActivated === false ? \"FavMovies\" : \"LandingPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"LandingPage\",\n      component: LandingPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"FavMovies\",\n      component: FavMovies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Navigation\",\n      component: Navigation,\n      initialParams: {\n        recentlyActivated: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"SearchFavs\",\n      component: SearchFavMovies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    })));\n  }\n}\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/HP USER/Documents/Github/movie-suggestor/client/App.js"],"names":["React","useState","useEffect","useFonts","AppLoading","LinearGradient","LandingPage","FavMovies","Navigation","SearchFavMovies","Testing","createStackNavigator","NavigationContainer","auth","db","onAuthStateChanged","user","console","log","Stack","App","loggedIn","setLoggedIn","accountActivated","setAccountActivated","initialUserCheck","collection","doc","uid","get","then","data","movies","length","catch","error","loggedOut","require","fontsLoaded","undefined","headerShown","recentlyActivated","styles","StyleSheet","create","background","flex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, Image, TouchableOpacity } from 'react-native';\r\nimport { useFonts } from '@use-expo/font';\r\nimport { AppLoading } from 'expo';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\n\r\nimport LandingPage from './landingPage';\r\nimport FavMovies from './favMovies';\r\nimport Navigation from './navigation';\r\nimport SearchFavMovies from './searchFavMovies'\r\nimport Testing from './test'\r\n\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\n\r\nimport {auth, db} from './firebaseHandler'\r\n\r\nauth.onAuthStateChanged((user) => {\r\n  if (user != null) {\r\n    console.log(\"Logged In\")\r\n  } else {\r\n    console.log(\"Logged Out\")\r\n  }\r\n});\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function App() {\r\n  const [loggedIn, setLoggedIn] = useState()\r\n  const [accountActivated, setAccountActivated] = useState()\r\n\r\n  function initialUserCheck(user) {\r\n      db.collection(\"users\").doc(user.uid).get().then(function(doc) {\r\n      if (doc.data().movies.length !== 0) {\r\n        setAccountActivated(true)\r\n      } else {\r\n        setAccountActivated(false)\r\n      }\r\n      setLoggedIn(true)\r\n    }).catch(function(error) {\r\n        console.log(\"Error getting document:\", error);\r\n    });\r\n  }\r\n  function loggedOut() {\r\n    setAccountActivated(false)\r\n    setLoggedIn(false)\r\n\r\n  }\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((user) => user ? initialUserCheck(user) : loggedOut())\r\n  }, [])\r\n  let [fontsLoaded] = useFonts({\r\n    'ReemKufi-Regular': require('./assets/fonts/ReemKufi-Regular.ttf'),\r\n    'Raleway-Regular': require('./assets/fonts/Raleway-Regular.ttf'),\r\n    'Raleway-SemiBold': require('./assets/fonts/Raleway-SemiBold.ttf'),\r\n    'Raleway-Medium': require('./assets/fonts/Raleway-Medium.ttf'),\r\n    'Raleway-Bold': require('./assets/fonts/Raleway-Bold.ttf')\r\n  });\r\n  if (!fontsLoaded || loggedIn === undefined || accountActivated === undefined) {\r\n    return <AppLoading />;\r\n  }\r\n  else {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator screenOptions={{ headerShown: false }} initialRouteName={loggedIn && accountActivated ? \"Navigation\" : loggedIn && accountActivated === false ? \"FavMovies\" : \"LandingPage\"}>\r\n        <Stack.Screen name=\"LandingPage\" component={LandingPage}/>\r\n        <Stack.Screen name=\"FavMovies\" component={FavMovies} />\r\n        <Stack.Screen name=\"Navigation\" component={Navigation} initialParams={{recentlyActivated: false}}/>\r\n        <Stack.Screen name=\"SearchFavs\" component={SearchFavMovies}/>\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  background: {\r\n    flex: 1\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}