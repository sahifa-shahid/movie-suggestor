{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP USER\\\\Documents\\\\Github\\\\movie-suggestor\\\\client\\\\movieModal.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useState, useEffect } from 'react';\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport Constants from 'expo-constants';\nimport { BlurView } from 'expo-blur';\nimport pulpfiction from \"./assets/pulpFiction.png\";\nexport default function MovieModal(_ref) {\n  var modalVisible = _ref.modalVisible,\n      setModalVisible = _ref.setModalVisible,\n      item = _ref.item;\n\n  var _useState = useState(4),\n      _useState2 = _slicedToArray(_useState, 2),\n      testing = _useState2[0],\n      setTesting = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      movieInfo = _useState4[0],\n      setMovieInfo = _useState4[1];\n\n  useEffect(function () {\n    function getMoviesFromApi() {\n      var response, responseJson;\n      return _regeneratorRuntime.async(function getMoviesFromApi$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(\"https://api.themoviedb.org/3/movie/\" + item.id + \"?api_key=bd7527de69fe3480678236d07c155147\"));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 6:\n              responseJson = _context.sent;\n              setMovieInfo(responseJson);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    }\n\n    getMoviesFromApi();\n  }, [item]);\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert('Modal has been closed.');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, React.createElement(BlurView, {\n    tint: \"dark\",\n    intensity: 100,\n    style: styles.notBlurred,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, movieInfo === undefined ? React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 48\n    }\n  }, \"Loading...\") : React.createElement(View, {\n    style: styles.modalContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"close\",\n    color: \"white\",\n    size: 27,\n    style: {\n      alignSelf: 'flex-end'\n    },\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  })), React.createElement(Image, {\n    source: {\n      uri: \"https://image.tmdb.org/t/p/w500/\" + item.poster_path\n    },\n    style: styles.moviePoster,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }), React.createElement(AdjustLabel, {\n    fontSize: 40,\n    text: item.title,\n    style: styles.movieTitle,\n    numberOfLines: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      marginBottom: 10,\n      marginTop: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: testing >= 1 ? styles.activeRateButton : styles.rateButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    style: testing >= 2 ? styles.activeRateButton : styles.rateButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    style: testing >= 3 ? styles.activeRateButton : styles.rateButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    style: testing >= 4 ? styles.activeRateButton : styles.rateButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }), React.createElement(View, {\n    style: testing >= 5 ? styles.activeRateButton : styles.rateButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  })), React.createElement(Text, {\n    style: styles.genres,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, movieInfo.genres.map(function (genre, index) {\n    if (index === movieInfo.genres.length - 1) {\n      return \"\" + genre.name;\n    } else {\n      return genre.name + \" | \";\n    }\n  })), React.createElement(Text, {\n    style: styles.info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, item.release_date.slice(0, 4), \" \\u2022 \", parseInt(movieInfo.runtime / 60), \"h\", movieInfo.runtime % 60, \"m\"), React.createElement(AdjustLabel, {\n    fontSize: 11,\n    text: item.overview,\n    style: styles.paragraph,\n    numberOfLines: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  })))));\n}\n\nvar AdjustLabel = function AdjustLabel(_ref2) {\n  var fontSize = _ref2.fontSize,\n      text = _ref2.text,\n      style = _ref2.style,\n      numberOfLines = _ref2.numberOfLines;\n\n  var _useState5 = useState(fontSize),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentFont = _useState6[0],\n      setCurrentFont = _useState6[1];\n\n  return React.createElement(Text, {\n    numberOfLines: numberOfLines,\n    adjustsFontSizeToFit: true,\n    style: [style, {\n      fontSize: currentFont\n    }],\n    onTextLayout: function onTextLayout(e) {\n      var lines = e.nativeEvent.lines;\n\n      if (lines.length > numberOfLines) {\n        setCurrentFont(currentFont - 1);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, text);\n};\n\nvar styles = StyleSheet.create({\n  modalContainer: {\n    backgroundColor: '#2F2F2F',\n    marginTop: 'auto',\n    marginBottom: 'auto',\n    marginHorizontal: 20,\n    borderRadius: 40,\n    paddingVertical: 20,\n    paddingLeft: 40,\n    paddingRight: 20\n  },\n  movieTitle: {\n    fontFamily: 'Raleway-Bold',\n    color: 'white',\n    textTransform: 'uppercase'\n  },\n  rateButton: {\n    backgroundColor: 'white',\n    padding: 4.5,\n    borderRadius: 9,\n    marginRight: 8\n  },\n  activeRateButton: {\n    backgroundColor: '#DD1515',\n    padding: 4.5,\n    borderRadius: 9,\n    marginRight: 8\n  },\n  genres: {\n    fontFamily: 'Raleway-Bold',\n    color: 'white',\n    fontSize: 13\n  },\n  info: {\n    fontFamily: 'Raleway-Bold',\n    color: 'white',\n    fontSize: 11\n  },\n  paragraph: {\n    fontFamily: 'Raleway-Regular',\n    color: 'white',\n    fontSize: 11,\n    marginTop: 20\n  },\n  moviePoster: {\n    marginBottom: 13,\n    width: 168,\n    height: 252\n  },\n  notBlurred: _objectSpread({}, StyleSheet.absoluteFill)\n});","map":{"version":3,"sources":["C:/Users/HP USER/Documents/Github/movie-suggestor/client/movieModal.js"],"names":["React","Component","useState","useEffect","MaterialIcons","Constants","BlurView","pulpfiction","MovieModal","modalVisible","setModalVisible","item","testing","setTesting","movieInfo","setMovieInfo","getMoviesFromApi","fetch","id","response","json","responseJson","console","error","Alert","alert","styles","notBlurred","undefined","modalContainer","alignSelf","uri","poster_path","moviePoster","title","movieTitle","flexDirection","marginBottom","marginTop","activeRateButton","rateButton","genres","map","genre","index","length","name","info","release_date","slice","parseInt","runtime","overview","paragraph","AdjustLabel","fontSize","text","style","numberOfLines","currentFont","setCurrentFont","e","lines","nativeEvent","StyleSheet","create","backgroundColor","marginHorizontal","borderRadius","paddingVertical","paddingLeft","paddingRight","fontFamily","color","textTransform","padding","marginRight","width","height","absoluteFill"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { Modal, Text, TouchableOpacity, TouchableHighlight, View, Alert, StyleSheet, Image } from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport Constants from 'expo-constants'\r\nimport { BlurView } from 'expo-blur';\r\n\r\nimport pulpfiction from './assets/pulpFiction.png'\r\n\r\nexport default function MovieModal({ modalVisible, setModalVisible, item }) {\r\n\r\n    const [testing, setTesting] = useState(4)\r\n    const [movieInfo, setMovieInfo] = useState()\r\n\r\n    useEffect(() => {\r\n        async function getMoviesFromApi() {\r\n            try {\r\n                let response = await fetch(`https://api.themoviedb.org/3/movie/${item.id}?api_key=bd7527de69fe3480678236d07c155147`);\r\n                let responseJson = await response.json();\r\n                setMovieInfo(responseJson)\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        getMoviesFromApi()\r\n    }, [item])\r\n\r\n    return (\r\n        <View>\r\n            <Modal\r\n                animationType=\"fade\"\r\n                transparent={true}\r\n                visible={modalVisible}\r\n                onRequestClose={() => {\r\n                    Alert.alert('Modal has been closed.');\r\n                }}>\r\n                <BlurView tint=\"dark\" intensity={100} style={styles.notBlurred}>\r\n                    {movieInfo === undefined ? <Text>Loading...</Text> :\r\n                    <View style={styles.modalContainer}>\r\n                        <TouchableOpacity>\r\n                            <MaterialIcons name='close' color='white' size={27} style={{ alignSelf: 'flex-end' }} onPress={() => { setModalVisible(!modalVisible); }} />\r\n                        </TouchableOpacity>\r\n                        <Image source={{ uri: `https://image.tmdb.org/t/p/w500/${item.poster_path}` }} style={styles.moviePoster}></Image>\r\n                        <AdjustLabel fontSize={40} text={item.title} style={styles.movieTitle} numberOfLines={2} />\r\n                        <View style={{ flexDirection: 'row', marginBottom: 10, marginTop: 2 }}>\r\n                            <View style={(testing >= 1) ? styles.activeRateButton : styles.rateButton}></View>\r\n                            <View style={(testing >= 2) ? styles.activeRateButton : styles.rateButton}></View>\r\n                            <View style={(testing >= 3) ? styles.activeRateButton : styles.rateButton}></View>\r\n                            <View style={(testing >= 4) ? styles.activeRateButton : styles.rateButton}></View>\r\n                            <View style={(testing >= 5) ? styles.activeRateButton : styles.rateButton}></View>\r\n                        </View>\r\n                    <Text style={styles.genres}>{movieInfo.genres.map((genre, index) => {\r\n                        if(index === movieInfo.genres.length-1) {\r\n                            return `${genre.name}`\r\n                        } else {\r\n                            return `${genre.name} | `\r\n                        }\r\n                    })}</Text>\r\n                        <Text style={styles.info}>{item.release_date.slice(0,4)} • {parseInt(movieInfo.runtime/60)}h{movieInfo.runtime % 60}m</Text>\r\n                        <AdjustLabel fontSize={11} text={item.overview} style={styles.paragraph} numberOfLines={8} />\r\n                    </View>\r\n                    }\r\n                </BlurView>\r\n            </Modal>\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst AdjustLabel = ({ fontSize, text, style, numberOfLines }) => {\r\n    const [currentFont, setCurrentFont] = useState(fontSize);\r\n\r\n    return (\r\n        <Text\r\n            numberOfLines={numberOfLines}\r\n            adjustsFontSizeToFit\r\n            style={[style, { fontSize: currentFont }]}\r\n            onTextLayout={(e) => {\r\n                const { lines } = e.nativeEvent;\r\n                if (lines.length > numberOfLines) {\r\n                    setCurrentFont(currentFont - 1);\r\n                }\r\n            }}\r\n        >\r\n            {text}\r\n        </Text>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    modalContainer: {\r\n        backgroundColor: '#2F2F2F',\r\n        //justifyContent: 'center',\r\n        //alignItems: 'center',\r\n        marginTop: 'auto',\r\n        marginBottom: 'auto',\r\n        marginHorizontal: 20,\r\n        borderRadius: 40,\r\n        paddingVertical: 20,\r\n        paddingLeft: 40,\r\n        paddingRight: 20\r\n    },\r\n    movieTitle: {\r\n        fontFamily: 'Raleway-Bold',\r\n        color: 'white',\r\n        textTransform: 'uppercase'\r\n    },\r\n    rateButton: {\r\n        backgroundColor: 'white',\r\n        padding: 4.5,\r\n        borderRadius: 9,\r\n        marginRight: 8,\r\n    },\r\n    activeRateButton: {\r\n        backgroundColor: '#DD1515',\r\n        padding: 4.5,\r\n        borderRadius: 9,\r\n        marginRight: 8,\r\n    },\r\n    genres: {\r\n        fontFamily: 'Raleway-Bold',\r\n        color: 'white',\r\n        fontSize: 13\r\n    },\r\n    info: {\r\n        fontFamily: 'Raleway-Bold',\r\n        color: 'white',\r\n        fontSize: 11\r\n    },\r\n    paragraph: {\r\n        fontFamily: 'Raleway-Regular',\r\n        color: 'white',\r\n        fontSize: 11,\r\n        marginTop: 20\r\n    },\r\n    moviePoster: {\r\n        marginBottom: 13,\r\n        width: 168,\r\n        height: 252\r\n    },\r\n    notBlurred: {\r\n        ...StyleSheet.absoluteFill,\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}